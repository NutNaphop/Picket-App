import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:locket_mockup/service/Image/Image_service.dart';

class ImageFriendProvider with ChangeNotifier {
  bool _isLoading = true;
  Stream<List<QueryDocumentSnapshot<Map<String, dynamic>>>>? _imgFriendStream;
  List<QueryDocumentSnapshot<Map<String, dynamic>>> _allImages = [];
  List<QueryDocumentSnapshot<Map<String, dynamic>>> _allImagesTemp = [];

  String? filterBy; // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö ID ‡∏Ç‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å

  List<QueryDocumentSnapshot<Map<String, dynamic>>> get images {
    // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏£‡∏π‡∏õ‡∏Ç‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    if (filterBy != null) {
      return _allImages.where((img) => img.data()["by"] == filterBy).toList();
    }
    return _allImagesTemp;
  }

  bool get isLoading => _isLoading;

  ImageFriendProvider() {
    fetchImages();
  }

  void fetchImages() {
    getImageFriend().listen((newImages) {
      _allImages = newImages;
      _allImagesTemp = newImages; 
      _isLoading = false;
      notifyListeners(); // üî• ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô UI ‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
    });
  }

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡∏†‡∏≤‡∏û‡∏ï‡∏≤‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  void setFilter(String friendId) {
    filterBy = friendId;
    notifyListeners(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI
  }

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  void clearFilter() {
    filterBy = null;
    notifyListeners();
  }
}
